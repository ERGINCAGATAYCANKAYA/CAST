% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aoa.R
\name{aoa}
\alias{aoa}
\title{Estimate the area of applicability}
\usage{
aoa(train, predictors, weight = NA, model = NA, variables = "all",
  threshold = "90\%", scale = FALSE, clstr = NULL, cl = NULL)
}
\arguments{
\item{train}{a data.frame containing the data used for model training}

\item{predictors}{A RasterStack, RasterBrick or data.frame containing the data
the model was meant to make predictions for.}

\item{weight}{A data.frame containing weights for each variable}

\item{model}{A caret model used to extract weights from (based on variable importance)}

\item{variables}{character vector of predictor variables. if "all" then all variables
of the train dataset are used. Check varImp(model).}

\item{threshold}{Numeric or character indicating the quantile (e.g. "90%"). Used to
define the AOA}

\item{scale}{logical. If TRUE uncertainty is scaled between 0 and 1. See Details.}

\item{clstr}{Numeric or character. Spatial cluster affiliation for each data point. Should be used if replicates are present.}

\item{cl}{Cluster object created with parallel::makeCluster. To run things in parallel.}
}
\value{
A RasterLayer or data.frame
}
\description{
this function estimates teh area of applicability of spatial prediction models by
considering the distance of new data (i.e. a Raster Stack of spatial predictors
used in the models) in the predictor variable space to the data used for model
training. Predictors can be weighted in the ideal case based on the internal
variable importance of the machine learning algorithm used for model training.
}
\details{
Interpretation of results: If a location is very similar to the properties
of the training data it will have a low distance in the predictor variable space
(low uncertainty) while locations that are very different in its properties
will have a high uncertainty.
If scale is FALSE then uncertainty is returned as distance scaled by the length of the gradent in the training data:
The further the distance in this variable space, the larger the uncertainty gets. e.g. an uncertainty of 0.5 means
that the distance to the nearest training point is half the distance of the gradient observed in the training data.
The uncertainty can get higher than 1 if the nearest training point is further away than the length of the gradient in the training data.
This happens when we apply a model to an area that is fully out of the range of what the model was trained on.
If scale is TRUE then the output is scaled between 0 and 1, but no comparison between models will be possible.
}
\examples{
\dontrun{
library(sf)
library(raster)
library(caret)

# prepare sample data:
dat <- get(load(system.file("extdata","Cookfarm.RData",package="CAST")))
dat <- aggregate(dat[,c("VW","Easting","Northing")],by=list(as.character(dat$SOURCEID)),mean)
pts <- st_as_sf(dat,coords=c("Easting","Northing"))
pts$ID <- 1:nrow(pts)
studyArea <- stack(system.file("extdata","predictors_2012-03-25.grd",package="CAST"))[[1:8]]
trainDat <- extract(studyArea,pts,df=TRUE)
trainDat <- merge(trainDat,pts,by.x="ID",by.y="ID")

# visualize data spatially:
spplot(scale(studyArea))
plot(studyArea$DEM)
plot(pts[,1],add=TRUE,col="black")

# first calculate uncertainty based on a set of variables with equal weights:
variables <- c("DEM","Easting","Northing")
AOA <- aoa(trainDat,studyArea,variables=variables)
spplot(AOA$AOAI, col.regions=viridis(100))+
spplot(AOA$AOA,col.regions=c("transparent","grey"))

# or weight variables based on variable improtance from a (simple) trained model:
set.seed(100)
model <- train(trainDat[,which(names(trainDat)\%in\%variables)],
trainDat$VW,method="rf",importance=TRUE,tuneLength=1)
prediction <- predict(studyArea,model)
plot(varImp(model,scale=FALSE))
#
# note that coordinates are the major predictors here,
# so uncertainty becomes higher when moving away from the training data:
par(mfrow=c(1,2))
plot(prediction,main="predicted VW")
AOA <- aoa(trainDat,studyArea,model=model,variables=variables)
spplot(AOA$AOAI, col.regions=viridis(100))+
spplot(AOA$AOA,col.regions=c("transparent","grey"))
}
}
\author{
Hanna Meyer
}
