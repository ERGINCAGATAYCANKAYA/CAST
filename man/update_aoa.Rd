% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/update_aoa.R
\name{update_aoa}
\alias{update_aoa}
\title{Update the AOA based on a user-defined proficiency value}
\usage{
update_aoa(
  AOA,
  model,
  calibration = NULL,
  response = NULL,
  proficiency = NULL,
  showplot = TRUE
)
}
\arguments{
\item{AOA}{the result of ?aoa}

\item{model}{the model used to get the AOA}

\item{calibration}{Optional. Data frame containing a new set of predictor and response values#}

\item{response}{character. Name of the response variable used in the model and present in the calibration data frame. Only required when calibration data are given.}

\item{proficiency}{numeric. error accepted for the AOA. To first get an overview leave it to NA and select it after inspecting the plot}

\item{showplot}{Logical. Show visualization oder not?}
}
\value{
rasterStack which contains the original DI and the updated AOA. The new threshold is stored in the attributes.
}
\description{
Update the AOA based on a user-defined proficiency value
}
\details{
The AOA is the area to which the model can be applied (because it has seen it) and where the reliability of predictions is expected to be comparable to the cross-validation error of the model.
However, it might be desireable to limit predictions to an area with a user-defined error.
This function allows for this based on the relationship of the DI an the absolute prediction error derived from cross-validation during model training.
Based on the selected proficiency, the new DI-threshold is derived from the linear model between the DI and the error.
Note that this is only recommended for proficiency values that lead to DI-thresholds smaller than the maximum DI of the training data.

The error-DI relationship can also be estimated by providing new
}
\examples{
\dontrun{
library(sf)
library(raster)
library(caret)
library(viridis)
library(latticeExtra)

# prepare sample data:
library(sf)
library(raster)
library(caret)
# prepare sample data:
dat <- get(load(system.file("extdata","Cookfarm.RData",package="CAST")))
dat <- aggregate(dat[,c("VW","Easting","Northing")],by=list(as.character(dat$SOURCEID)),mean)
pts <- st_as_sf(dat,coords=c("Easting","Northing"))
pts$ID <- 1:nrow(pts)
studyArea <- stack(system.file("extdata","predictors_2012-03-25.grd",package="CAST"))[[1:8]]
dat <- extract(studyArea,pts,df=TRUE)
trainDat <- merge(dat,pts,by.x="ID",by.y="ID")

# train a model:
variables <- c("DEM","NDRE.Sd","TWI")
set.seed(100)
model <- train(trainDat[,which(names(trainDat)\%in\%variables)],
  trainDat$VW,method="rf",importance=TRUE,tuneLength=1,
  trControl=trainControl(method="cv",number=5,savePredictions=TRUE))

#...then calculate the AOA of the trained model for the study area:
AOA <- aoa(studyArea,model)

AOA_new <- update_aoa(AOA,model,proficiency=0.06)
spplot(stack(AOA$AOA,AOA_new$AOA),main=c("original","new"))


####example with new calibration data:
dat <- get(load(system.file("extdata","Cookfarm.RData",package="CAST")))
calibration <- dat[sample(1:nrow(dat),100),]
AOA_new <- update_aoa(AOA,model,proficiency=0.06,calibration=calibration,response="VW")

}
}
\seealso{
\code{\link{aoa}}
}
\author{
Hanna Meyer
}
